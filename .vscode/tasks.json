{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "compile",
            "identifier": "compile",
            "type": "shell",
            "command": "arm-none-eabi-g++",
            "args": [
                "-mcpu=cortex-m3",
                "-mthumb",
                "-Wall",
                "-ffunction-sections",
                "-fno-exceptions", // if use exceptions - produse error: undefined reference to `_exit'; undefined reference to `_kill'; undefined reference to `_getpid'
                "-g",
                "-O0",
                "-c",
                "-DSTM32F103C8",
                "-DSTM32F10X_MD",
                "-DUSE_STDPERIPH_DRIVER",
                "-D__ASSEMBLY__",
                "-DSUPPORT_CPLUSPLUS",
                "-I${workspaceRoot}/libs/",
                "-I${workspaceRoot}/libs/cmsis",
                "-I${workspaceRoot}/libs/stm_lib/inc",
                "-I${workspaceRoot}/libs/cmsis_boot",
                "-I${workspaceRoot}/src/drivers/inc",
                "-I${workspaceRoot}/src/utils/inc",
                "${workspaceRoot}/libs/stm_lib/src/misc.c",
                "${workspaceRoot}/libs/stm_lib/src/stm32f10x_rcc.c",
                "${workspaceRoot}/libs/stm_lib/src/stm32f10x_gpio.c",
                "${workspaceRoot}/libs/stm_lib/src/stm32f10x_usart.c",
                "${workspaceRoot}/libs/stm_lib/src/stm32f10x_i2c.c",
                "${workspaceRoot}/src/utils/delay.c",
                "${workspaceRoot}/src/utils/convertation.c",
                "${workspaceRoot}/src/drivers/SysClock.c",
                "${workspaceRoot}/src/drivers/gpio.c",
                "${workspaceRoot}/src/drivers/led.cpp",
                "${workspaceRoot}/src/drivers/uart.c",
                "${workspaceRoot}/src/drivers/DS_1wire.cpp",
                //"${workspaceRoot}/src/startup_stm32f10x_md.c",              // ANSI C startup init
                "${workspaceRoot}/src/startup_stm32f10x_md.S",            // ASM startup init
                "${workspaceRoot}/libs/cmsis_boot/system_stm32f10x.c",
                "${workspaceRoot}/src/main.cpp"
            ],
            "problemMatcher": [
                "$msCompile"
            ]
        },
        {
            "dependsOn": "compile",
            "label": "link",
            "identifier": "link",
            "type": "shell",
            "command": "arm-none-eabi-g++",
            "args": [
                "-mcpu=cortex-m3",
                "-mthumb",
                "-g",
                //"--specs=nosys.specs",  // no semi-hosting which produses - libg.a(lib_a-exit.o): In function `exit': exit.c:(.text.exit+0x16): undefined reference to `_exit'
                "-nostartfiles",  // no standart libs! kills last error - libg.a(lib_a-exit.o): In function `exit': exit.c:(.text.exit+0x16): undefined reference to `_exit'
                "-Wl,-Map=${workspaceRoot}/out/app.map",
                "-O0",
                "-Wl,--gc-sections",
                "-Wl,-T${workspaceRoot}/link/link.ld",
                "-g",
                "-o",
                "${workspaceRoot}/out/app.elf",
                "${workspaceRoot}/misc.o",
                "${workspaceRoot}/startup_stm32f10x_md.o",
                "${workspaceRoot}/system_stm32f10x.o",
                "${workspaceRoot}/stm32f10x_rcc.o",
                "${workspaceRoot}/stm32f10x_gpio.o",
                "${workspaceRoot}/stm32f10x_usart.o",
                "${workspaceRoot}/stm32f10x_i2c.o",
                "${workspaceRoot}/delay.o",
                "${workspaceRoot}/convertation.o",
                "${workspaceRoot}/SysClock.o",
                "${workspaceRoot}/gpio.o",
                "${workspaceRoot}/led.o",
                "${workspaceRoot}/uart.o",
                "${workspaceRoot}/DS_1wire.o",
                "${workspaceRoot}/main.o"
            ],
            "problemMatcher": [
                "$msCompile"
            ]
        },
        {
            "dependsOn": "link",
            "label": "del",
            "identifier": "del",
            "type": "shell",
            "command": "DEL",
            "args": [
                "*.o"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "del",
            "label": "bin",
            "identifier": "bin",
            "type": "shell",
            "command": "arm-none-eabi-objcopy",
            "args": [
                "-O",
                "binary",
                "${workspaceRoot}/out/app.elf",
                "${workspaceRoot}/out/app.bin"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "bin",
            "label": "hex",
            "identifier": "hex",
            "type": "shell",
            "command": "arm-none-eabi-objcopy",
            "args": [
                "-O",
                "ihex",
                "${workspaceRoot}/out/app.elf",
                "${workspaceRoot}/out/app.hex"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "hex",
            "label": "nm",
            "identifier": "nm",
            "type": "shell",
            "command": "arm-none-eabi-nm",
            "args": [
                "-n",
                "${workspaceRoot}/out/app.elf",
                ">",
                "${workspaceRoot}/out/app.sym"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "nm",
            "label": "build",
            "identifier": "build",
            "type": "shell",
            "command": "arm-none-eabi-size",
            "args": [
                "${workspaceRoot}/out/app.elf"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "clean",
            "identifier": "clean",
            "type": "shell",
            "command": "DEL",
            "args": [
                "${workspaceRoot}\\out\\ /q *.*"
            ],
            "problemMatcher": []
        }
    ]
}