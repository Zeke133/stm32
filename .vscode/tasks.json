{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "compile",
            "identifier": "compile",
            "type": "shell",
            "command": "arm-none-eabi-g++",
            "args": [
                // --- FLAGS
                "-mcpu=cortex-m3",
                "-mthumb",
                // ---
                "-g",                           // debug mode
                "-O0",                          // optimisation
                "-c",                           // compile only, without link
                // ---
                "-Wall",                        // show all warnings
                // ---
                "--specs=nano.specs",           // To use newlib-nano
                "-ffunction-sections",          // which split functions and data into their own ELF sections.
                "-fdata-sections",              // This allows the linker to eliminate additional unused code when passed --gc-sections
                "-fno-exceptions",              // in libs
                "-fno-non-call-exceptions",
                "-fno-rtti",
                "-fno-use-cxa-atexit",          // Teardown code (including global destructors) can be omitted
                "-ffreestanding",               // indicates that your program exists in an environment
                                                // where standard library facilities may be absent
                                                // and where your program may not begin at main()
                // --- DEFINES
                "-DSTM32F103C8",
                "-DSTM32F10X_MD",
                "-DUSE_STDPERIPH_DRIVER",
                "-D__ASSEMBLY__",
                "-DSUPPORT_CPLUSPLUS",
                // --- INCLUDES
                // Libs
                "-I${workspaceRoot}/libs/cmsis/CM3/CoreSupport",
                "-I${workspaceRoot}/libs/cmsis/CM3/DeviceSupport/ST/STM32F10x",
                "-I${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/inc",
                // User
                "-I${workspaceRoot}/source/interfaces",
                "-I${workspaceRoot}/source/main/headers",
                "-I${workspaceRoot}/source/drivers/headers",
                "-I${workspaceRoot}/source/modules/headers",
                "-I${workspaceRoot}/source/utils/headers",
                "-I${workspaceRoot}/source/debugApi/headers",
                // --- SOURCES
                // Libs
                "${workspaceRoot}/source/main/modules/startup_stm32f10x_md.S",      // ASM startup init
                //"${workspaceRoot}/source/main/modules/startup_stm32f10x_md.c",    // ANSI C startup init
                "${workspaceRoot}/libs/cmsis/CM3/DeviceSupport/ST/STM32F10x/system_stm32f10x.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/misc.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_rcc.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_gpio.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_usart.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_i2c.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_rtc.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_pwr.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_dma.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_adc.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_tim.c",
                "${workspaceRoot}/libs/STM32F10x_StdPeriph_Driver/src/stm32f10x_flash.c",
                // User
                "${workspaceRoot}/source/drivers/modules/delay.cpp",
                "${workspaceRoot}/source/drivers/modules/sysClock.cpp",
                "${workspaceRoot}/source/drivers/modules/gpio.cpp",
                "${workspaceRoot}/source/drivers/modules/led.cpp",
                "${workspaceRoot}/source/drivers/modules/usart.cpp",
                "${workspaceRoot}/source/drivers/modules/oneWire.cpp",
                "${workspaceRoot}/source/drivers/modules/i2c.cpp",
                "${workspaceRoot}/source/drivers/modules/rtc.cpp",
                "${workspaceRoot}/source/drivers/modules/adc.cpp",
                "${workspaceRoot}/source/drivers/modules/tacho.cpp",
                "${workspaceRoot}/source/drivers/modules/storage.cpp",
                "${workspaceRoot}/source/modules/modules/oneWireSearch.cpp",
                "${workspaceRoot}/source/modules/modules/ds18b20.cpp",
                "${workspaceRoot}/source/modules/modules/lcd.cpp",
                "${workspaceRoot}/source/modules/modules/analogTempSensor.cpp",
                "${workspaceRoot}/source/modules/modules/oStream.cpp",     
                "${workspaceRoot}/source/utils/modules/convertation.cpp",
                "${workspaceRoot}/source/utils/modules/crc.cpp",
                "${workspaceRoot}/source/utils/modules/strings.cpp",           
                "${workspaceRoot}/source/debugApi/modules/debugApi.cpp",
                "${workspaceRoot}/source/main/modules/main.cpp"
            ],
            "problemMatcher": [
                "$msCompile"
            ]
        },
        {
            "dependsOn": "compile",
            "label": "link",
            "identifier": "link",
            "type": "shell",
            "command": "arm-none-eabi-g++",
            "args": [
                // ---
                "-mcpu=cortex-m3",
                "-mthumb",
                "-O0",                          // optimization level
                "-g",                           // debug mode
                // ---
                "--specs=nano.specs",           // To use newlib-nano
                "--specs=nosys.specs",          // no semi-hosting
                "-nostartfiles",                // Do not use the standard system startup files
                // ---
                "-Wl,-Map=${workspaceRoot}/bin/app.map",        // .map output
                "-Wl,-cref",                    // include cross-referenses in .map
                "-Wl,--gc-sections",            // bring out unused blocks of code from output
                "-Wl,-T${workspaceRoot}/linkScripts/link.ld",   // linking script
                // --
                "-o",                           // output file
                "${workspaceRoot}/bin/app.elf",
                // ---
                "${workspaceRoot}/misc.o",
                "${workspaceRoot}/startup_stm32f10x_md.o",
                "${workspaceRoot}/system_stm32f10x.o",
                "${workspaceRoot}/stm32f10x_rcc.o",
                "${workspaceRoot}/stm32f10x_gpio.o",
                "${workspaceRoot}/stm32f10x_usart.o",
                "${workspaceRoot}/stm32f10x_i2c.o",
                "${workspaceRoot}/stm32f10x_rtc.o",
                "${workspaceRoot}/stm32f10x_pwr.o",
                "${workspaceRoot}/stm32f10x_dma.o",
                "${workspaceRoot}/stm32f10x_adc.o",
                "${workspaceRoot}/stm32f10x_tim.o",
                "${workspaceRoot}/stm32f10x_flash.o",
                "${workspaceRoot}/delay.o",
                "${workspaceRoot}/sysClock.o",
                "${workspaceRoot}/gpio.o",
                "${workspaceRoot}/led.o",
                "${workspaceRoot}/usart.o",
                "${workspaceRoot}/oneWire.o",
                "${workspaceRoot}/oneWireSearch.o",
                "${workspaceRoot}/ds18b20.o",
                "${workspaceRoot}/i2c.o",
                "${workspaceRoot}/lcd.o",
                "${workspaceRoot}/rtc.o",
                "${workspaceRoot}/adc.o",
                "${workspaceRoot}/tacho.o",
                "${workspaceRoot}/storage.o",
                "${workspaceRoot}/analogTempSensor.o",                
                "${workspaceRoot}/convertation.o",
                "${workspaceRoot}/crc.o",
                "${workspaceRoot}/strings.o",
                "${workspaceRoot}/oStream.o",
                "${workspaceRoot}/debugApi.o",
                "${workspaceRoot}/main.o"
            ],
            "problemMatcher": [
                "$msCompile"
            ]
        },
        {
            "dependsOn": "link",
            "label": "del",
            "identifier": "del",
            "type": "shell",
            "command": "DEL",
            "args": [
                "*.o"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "del",
            "label": "bin",
            "identifier": "bin",
            "type": "shell",
            "command": "arm-none-eabi-objcopy",
            "args": [
                "-O",
                "binary",
                "${workspaceRoot}/bin/app.elf",
                "${workspaceRoot}/bin/app.bin"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "bin",
            "label": "hex",
            "identifier": "hex",
            "type": "shell",
            "command": "arm-none-eabi-objcopy",
            "args": [
                "-O",
                "ihex",
                "${workspaceRoot}/bin/app.elf",
                "${workspaceRoot}/bin/app.hex"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "hex",
            "label": "nm",
            "identifier": "nm",
            "type": "shell",
            "command": "arm-none-eabi-nm",
            "args": [
                "-n",
                "${workspaceRoot}/bin/app.elf",
                ">",
                "${workspaceRoot}/bin/app.sym"
            ],
            "problemMatcher": []
        },
        {
            "dependsOn": "nm",
            "label": "build",
            "identifier": "build",
            "type": "shell",
            "command": "arm-none-eabi-size",
            "args": [
                "${workspaceRoot}/bin/app.elf"
            ],
            "problemMatcher": [],
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "label": "clean",
            "identifier": "clean",
            "type": "shell",
            "command": "DEL",
            "args": [
                "${workspaceRoot}\\bin\\ /q *.*"
            ],
            "problemMatcher": []
        },
        {
            // Uploading of firmware to MCU via UART
            "label": "upload",
            "identifier": "upload",
            "type": "shell",
            "command": "${workspaceRoot}\\loader\\STMFlashLoader.exe",
            "args": [
                // COM-port setup
                "-c",
                "--pn",
                "5",
                // Memory MAP
                "-i",
                //"STM32F1_Med-density_64K",
                "STM32F1_Med-density_128K",
                // Erasing blocks
                "-e",
                "--sec",
                "20",
                "0",
                "1",
                "2",
                "3",
                "4",
                "5",
                "6",
                "7",
                "8",
                "9",
                "10",
                "11",
                "12",
                "13",
                "14",
                "15",
                "16",
                "17",
                "18",
                "19",
                //"--all",
                // File with firmware
                "-d",
                "--fn",
                "${workspaceRoot}\\bin\\app.hex"
            ],
            "problemMatcher": []
        },
        // --- UNIT TESTS BUILDING
        {
            "label": "buildTests",
            "type": "shell",
            "command": "g++",
            "args": [
                "-isystem",
                "../googleTest/googletest/include",
                "-pthread",
                // --- INCLUDES
                "-I${workspaceRoot}/source/utils/headers",
                // TestCases
                "${workspaceRoot}/source/tests/unit/convertationTest.cpp",
                "${workspaceRoot}/source/tests/unit/crcTest.cpp",
                "${workspaceRoot}/source/tests/unit/runAllTests.cpp",
                // Tested modules
                "${workspaceRoot}/source/utils/modules/convertation.cpp",
                "${workspaceRoot}/source/utils/modules/crc.cpp",
                // TestFramework lib
                "../googleTest/googletest/build/gtest_main.a",
                // output
                "-o",
                "${workspaceRoot}/bin/UnitTests",
                // compliler flags
                "-Wall",
                "-std=c++17"
            ]
        },
        {
            "label": "runTests",
            "dependsOn": "buildTests",
            "type": "shell",
            "command": "${workspaceRoot}/bin/UnitTests",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        }
    ]
}


